"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[673],{5140:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"react-concepts/why-react","title":"Why React?","description":"The Problem: Imperative UI Updates","source":"@site/docs/react-concepts/why-react.md","sourceDirName":"react-concepts","slug":"/react-concepts/why-react","permalink":"/stock-viewer/docs/react-concepts/why-react","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-concepts/why-react.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"React Concepts","permalink":"/stock-viewer/docs/category/react-concepts"},"next":{"title":"Virtual DOM","permalink":"/stock-viewer/docs/react-concepts/virtual-dom"}}');var a=n(4848),r=n(8453);const c={sidebar_position:1},i="Why React?",o={},l=[{value:"The Problem: Imperative UI Updates",id:"the-problem-imperative-ui-updates",level:2},{value:"Example Using React",id:"example-using-react",level:2},{value:"In this example:",id:"in-this-example",level:2}];function d(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"why-react",children:"Why React?"})}),"\n",(0,a.jsx)(t.h2,{id:"the-problem-imperative-ui-updates",children:"The Problem: Imperative UI Updates"}),"\n",(0,a.jsxs)(t.p,{children:["Before React, web applications were built using ",(0,a.jsx)(t.strong,{children:"imperative programming"}),", where developers manually manipulated the ",(0,a.jsx)(t.strong,{children:"DOM"})," to update the UI. This led to:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Complex code"}),": Developers had to track changes and update elements manually."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Performance issues"}),": Frequent DOM updates were slow and inefficient."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"State management difficulties"}),": Keeping UI in sync with data was challenging."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"Example of imperative UI updates:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'const button = document.getElementById("fetchPrice");\nbutton.addEventListener("click", async () => {\n  const response = await fetch("https://api.example.com/stock");\n  const data = await response.json();\n  document.getElementById("price").innerText = `Price: $${data.price}`;\n});\n'})}),"\n",(0,a.jsx)(t.p,{children:"In this approach, the developer manually selects elements and updates them, making the code harder to maintain as the application grows."}),"\n",(0,a.jsx)(t.h1,{id:"the-solution-react-and-declarative-ui",children:"The Solution: React and Declarative UI"}),"\n",(0,a.jsxs)(t.p,{children:["React, created by ",(0,a.jsx)(t.strong,{children:"Facebook in 2013"}),", introduced a ",(0,a.jsx)(t.strong,{children:"declarative programming"})," approach, solving the challenges of UI updates by:"]}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Using a Virtual DOM"}),": React updates only the necessary parts of the UI efficiently."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"Encapsulating UI into Components"}),": Code is structured into reusable components."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"State-driven UI updates"}),": The UI automatically updates when data changes."]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"example-using-react",children:"Example Using React"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-jsx",children:'import { useState } from "react";\n\nfunction StockSearch() {\n  const [price, setPrice] = useState(null);\n\n  const fetchPrice = async () => {\n    const response = await fetch("https://api.example.com/stock");\n    const data = await response.json();\n    setPrice(data.price);\n  };\n\n  return (\n    <div>\n      <button onClick={fetchPrice}>Get Stock Price</button>\n      {price && <p>Price: ${price}</p>}\n    </div>\n  );\n}\n\nexport default StockSearch;\n'})}),"\n",(0,a.jsx)(t.h2,{id:"in-this-example",children:"In this example:"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"The UI is declarative"}),": The component describes how the UI should look based on state (",(0,a.jsx)(t.code,{children:"price"}),")."]}),"\n",(0,a.jsxs)(t.li,{children:[(0,a.jsx)(t.strong,{children:"React automatically updates the DOM"})," when state changes, without manual DOM manipulation."]}),"\n"]}),"\n",(0,a.jsx)(t.hr,{}),"\n",(0,a.jsx)(t.h1,{id:"why-react-1",children:"Why React?"}),"\n",(0,a.jsxs)(t.p,{children:["\u2705 ",(0,a.jsx)(t.strong,{children:"Simpler code"}),": Focus on what the UI should look like, rather than how to update it.",(0,a.jsx)(t.br,{}),"\n","\u2705 ",(0,a.jsx)(t.strong,{children:"Better performance"}),": React updates only necessary parts of the UI using the Virtual DOM.",(0,a.jsx)(t.br,{}),"\n","\u2705 ",(0,a.jsx)(t.strong,{children:"Scalability"}),": The component-based architecture makes it easier to build and maintain large applications."]}),"\n",(0,a.jsx)(t.p,{children:"React simplifies frontend development, making it a preferred choice for modern web applications."})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var s=n(6540);const a={},r=s.createContext(a);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);