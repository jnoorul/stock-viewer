"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[463],{8605:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"react-concepts/virtual-dom","title":"Virtual DOM","description":"What is the Virtual DOM?","source":"@site/docs/react-concepts/virtual-dom.md","sourceDirName":"react-concepts","slug":"/react-concepts/virtual-dom","permalink":"/stock-viewer/docs/react-concepts/virtual-dom","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/react-concepts/virtual-dom.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Why React?","permalink":"/stock-viewer/docs/react-concepts/why-react"},"next":{"title":"Component-Based Architecture","permalink":"/stock-viewer/docs/react-concepts/componnent-based-architecture"}}');var i=s(4848),r=s(8453);const a={sidebar_position:2},c="Virtual DOM",o={},l=[{value:"What is the Virtual DOM?",id:"what-is-the-virtual-dom",level:2},{value:"How Does the Virtual DOM Work?",id:"how-does-the-virtual-dom-work",level:2},{value:"Virtual DOM in Action",id:"virtual-dom-in-action",level:2},{value:"Benefits of the Virtual DOM",id:"benefits-of-the-virtual-dom",level:2}];function d(e){const t={br:"br",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"virtual-dom",children:"Virtual DOM"})}),"\n",(0,i.jsx)(t.h2,{id:"what-is-the-virtual-dom",children:"What is the Virtual DOM?"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.strong,{children:"Virtual DOM (VDOM)"})," is a lightweight copy of the actual ",(0,i.jsx)(t.strong,{children:"DOM (Document Object Model)"}),". It helps React update the UI efficiently by reducing direct interactions with the real DOM, which can be slow."]}),"\n",(0,i.jsxs)(t.p,{children:["Instead of updating the entire webpage whenever data changes, React uses the Virtual DOM to ",(0,i.jsx)(t.strong,{children:"calculate the minimal updates"})," required and applies them efficiently."]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"how-does-the-virtual-dom-work",children:"How Does the Virtual DOM Work?"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Render Phase"}),": When state or props change, React creates a new Virtual DOM tree."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Diffing Phase"}),": React compares (diffs) the new Virtual DOM with the previous one to detect changes."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Reconciliation Phase"}),": React updates only the changed elements in the actual DOM."]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"Alt text",src:s(2004).A+"",width:"2744",height:"1048"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"virtual-dom-in-action",children:"Virtual DOM in Action"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"React Code"}),(0,i.jsx)(t.th,{style:{textAlign:"center"},children:"Dev Console Output"})]})}),(0,i.jsx)(t.tbody,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"center"},children:(0,i.jsxs)("div",{style:{width:500},children:[" ",(0,i.jsx)(t.img,{alt:"Alt text",src:s(383).A+"",width:"2258",height:"1322"})," "]})}),(0,i.jsx)(t.td,{style:{textAlign:"center"},children:(0,i.jsx)(t.img,{alt:"Alt text",src:s(7218).A+"",width:"286",height:"456"})})]})})]}),"\n",(0,i.jsx)(t.h2,{id:"benefits-of-the-virtual-dom",children:"Benefits of the Virtual DOM"}),"\n",(0,i.jsxs)(t.p,{children:["\u2705 ",(0,i.jsx)(t.strong,{children:"Faster UI updates"}),": Only updates changed elements, reducing costly DOM operations.",(0,i.jsx)(t.br,{}),"\n","\u2705 ",(0,i.jsx)(t.strong,{children:"Improved performance"}),": Helps React efficiently manage complex UI updates.",(0,i.jsx)(t.br,{}),"\n","\u2705 ",(0,i.jsx)(t.strong,{children:"Better developer experience"}),": Easier to reason about UI updates without direct DOM manipulation."]}),"\n",(0,i.jsxs)(t.p,{children:["React's ",(0,i.jsx)(t.strong,{children:"Virtual DOM"})," makes UI updates more efficient and scalable for modern web applications."]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},7218:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/granular-dom-updates-bf29b5f42328f14beec60d941be656e2.gif"},383:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/vdom-code-72e7edba07e1b4e3da590ae72515f484.png"},2004:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/virtual-dom-flow-a4d53b93171beff72dfd577f971f7f64.png"},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>c});var n=s(6540);const i={},r=n.createContext(i);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);